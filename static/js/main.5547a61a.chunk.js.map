{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","useState","Math","random","toString","slice","id","touched","setToched","hasText","setHasText","hasError","htmlFor","classNames","type","placeholder","e","currentTarget","onBlur","inputValue","NewMovie","onAdd","count","setCount","setTitle","setDescription","image","setImage","imdb","setImbd","imdbid","setImbdId","onSubmit","preventDefault","addMovie","arg","disabled","trim","App","moviesFromServer","visibleMovies","setMovies","newArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5547a61a.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => { },\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setToched] = useState(false);\n  const [hasText, setHasText] = useState(false);\n  const hasError = touched && required && !value && !hasText;\n\n  const handleBlur = (inputValue:string) => {\n    if (inputValue !== '') {\n      setHasText(true);\n    } else {\n      setHasText(false);\n    }\n\n    setToched(true);\n  };\n\n  const handleChange = (e: { currentTarget: { value: string; }; }) => {\n    onChange(e.currentTarget.value);\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={handleChange}\n          onBlur={(e) => {\n            handleBlur(e.currentTarget.value);\n          }}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { FormEvent, useState } from 'react';\nimport { Movie } from '../../types/Movie';\nimport { TextField } from '../TextField';\n\ntype Props = {\n  onAdd: (newValue: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [image, setImage] = useState('');\n  const [imdb, setImbd] = useState('');\n  const [imdbid, setImbdId] = useState('');\n\n  const hasAllFilledInputs = () => {\n    return ((title.trim() === '')\n      || (image.trim() === '')\n      || (imdb.trim() === '')\n      || (imdbid.trim() === ''));\n  };\n\n  const handleTitle = (arg: string) => {\n    setTitle(arg);\n  };\n\n  const handleDescription = (arg: string) => {\n    setDescription(arg);\n  };\n\n  const handleImage = (arg: string) => {\n    setImage(arg);\n  };\n\n  const handleImbd = (arg: string) => {\n    setImbd(arg);\n  };\n\n  const handleImbdId = (arg: string) => {\n    setImbdId(arg);\n  };\n\n  const addMovie = (movie: Movie) => {\n    onAdd(movie);\n    setTitle('');\n    setDescription('');\n    setImage('');\n    setImbd('');\n    setImbdId('');\n    setCount(count + 1);\n  };\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const hasTitle = (title !== '');\n    const hasImage = (image !== '');\n    const hasImbd = (imdb !== '');\n    const hasImbdId = (imdbid !== '');\n\n    if (hasTitle && hasImage && hasImbd && hasImbdId) {\n      const movie = {\n        title,\n        description,\n        imgUrl: image,\n        imdbUrl: imdb,\n        imdbId: imdbid,\n      };\n\n      addMovie(movie);\n    }\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={handleTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={handleDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={image}\n        onChange={handleImage}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdb}\n        onChange={handleImbd}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbid}\n        onChange={handleImbdId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={\n              hasAllFilledInputs()\n            }\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [visibleMovies, setMovies] = useState(moviesFromServer);\n\n  const handleSubmit = (movie: Movie) => {\n    const newArray = [...visibleMovies, movie];\n\n    setMovies(newArray);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={visibleMovies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          onAdd={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}